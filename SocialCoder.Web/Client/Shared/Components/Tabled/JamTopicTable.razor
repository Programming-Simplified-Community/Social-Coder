@using SocialCoder.Web.Shared.Requests
@using SocialCoder.Web.Shared.ViewModels.CodeJam
@using SocialCoder.Web.Shared.Models.CodeJam
@using SocialCoder.Web.Client.Models
@inherits QueryComponent

<PaginatedTable TItem="IGetTopicsWithUserInfo_Topics_Items"
                FetchDataFunc="FetchData">
    <ErrorContent>
        <MudPaper Elevation="3">
            <MudAlert Severity="Severity.Error" Icon="@Icons.Filled.Error">
                <MudText Typo="Typo.h6">@context.Message</MudText>
            </MudAlert>
            
            @if (context.Exception is not null)
            {
                <MudText Typo="Typo.subtitle1">
                    @context.Exception.ToString()
                </MudText>    
            }
            
            <MudText Color="Color.Info" Typo="Typo.caption" Style="font-size: 0.75rem;">
                @context.Code
            </MudText>
        </MudPaper>
    </ErrorContent>
    <HeaderContent>
        <MudTh>Title</MudTh>
        <MudTh>Registration</MudTh>
        <MudTh>Active Period</MudTh>
        <MudTh>Status</MudTh>
        <MudTh>Team Applicants</MudTh>
        <MudTh>Solo Applicants</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.Title</MudTd>
        <MudTd>
            @context.RegistrationStartDate.ToString("d")
            <MudIcon Icon="@Icons.Filled.ArrowRight" Style="position: relative; top: 7px"/>
            @context.JamStartDate.ToString("d")
        </MudTd>
        <MudTd>
            @context.JamStartDate.ToString("d")
            <MudIcon Icon="@Icons.Filled.ArrowRight" Style="position: relative; top: 7px"/>
            @context.JamEndDate.ToString("d")
        </MudTd>
        <MudTd>
            @{
                var state = GetStatus(context);

                if (!string.IsNullOrEmpty(state.Text))
                {
                    <MudTooltip Text="@state.Text">
                        <MudIcon Color="Color.Secondary" Icon="@state.Icon"/>
                    </MudTooltip>
                }
            }
        </MudTd>
        <MudTd>@context.TeamApplicants</MudTd>
        <MudTd>@context.SoloApplicants</MudTd>
        <MudTd>
            <MudButton Color="Color.Error">
                <MudIcon Icon="@Icons.Filled.Delete"/>
            </MudButton>
        </MudTd>
    </RowTemplate>
</PaginatedTable>

@code {
    private (string Text, string Icon) GetStatus(IGetTopicsWithUserInfo_Topics_Items topic)
    {
        var now = DateTime.UtcNow;

        if (now >= topic.RegistrationStartDate && now <= topic.JamStartDate)
            return ("Accepting Applicants", Icons.Filled.AppRegistration);
        
        if (now >= topic.JamStartDate && now <= topic.JamEndDate)
            return ("Active", Icons.Filled.Campaign);

        return now >= topic.JamEndDate 
            ? ("Completed", Icons.Filled.Done) 
            : (string.Empty, Icons.Filled.AccessTime);
    }

    private async Task<QueryResponse<IGetTopicsWithUserInfo_Topics_Items>> FetchData(PageInfo info)
    {
        var response = await GraphQLClient.GetTopicsWithUserInfo.ExecuteAsync(info.Take, info.Skip, UserId);
        
        return new QueryResponse<IGetTopicsWithUserInfo_Topics_Items>
        {
            Errors = response.Errors,
            Items = response.Data?.Topics?.Items ?? new List<IGetTopicsWithUserInfo_Topics_Items>(),
            TotalDbCount = response.Data?.Topics?.TotalCount ?? 0
        };
    }

}